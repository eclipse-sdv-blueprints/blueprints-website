"use strict";(self.webpackChunkblueprints_website=self.webpackChunkblueprints_website||[]).push([[292],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=c(a),d=i,m=u["".concat(l,".").concat(d)]||u[d]||h[d]||s;return a?n.createElement(m,o(o({ref:t},p),{},{components:a})):n.createElement(m,o({ref:t},p))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=a.length,o=new Array(s);o[0]=d;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[u]="string"==typeof e?e:i,o[1]=r;for(var c=2;c<s;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5923:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const s={},o="Interact with Seat Adjuster",r={unversionedId:"companion-application/interact-seat-adjuster",id:"companion-application/interact-seat-adjuster",title:"Interact with Seat Adjuster",description:"We interact with the seat application through MQTT messages to emulate the behavior of an offboard application.",source:"@site/docs/companion-application/interact-seat-adjuster.md",sourceDirName:"companion-application",slug:"/companion-application/interact-seat-adjuster",permalink:"/docs/companion-application/interact-seat-adjuster",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"overallSidebar",previous:{title:"Deploy Application",permalink:"/docs/companion-application/deploy-seat-adjuster"},next:{title:"Introduction",permalink:"/docs/fleet-management/introduction"}},l={},c=[{value:"Run Kuksa Client",id:"run-kuksa-client",level:2},{value:"Deployment for Vehicle",id:"deployment-for-vehicle",level:2},{value:"References",id:"references",level:2}],p={toc:c},u="wrapper";function h(e){let{components:t,...s}=e;return(0,i.kt)(u,(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interact-with-seat-adjuster"},"Interact with Seat Adjuster"),(0,i.kt)("p",null,"We interact with the seat application through MQTT messages to emulate the behavior of an offboard application.\nTo see the responses from the seat adjuster app, subscribe to the MQTT topic `seatadjuster/#``."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mosquitto_sub -t 'seatadjuster/#' -v\n")),(0,i.kt)("p",null,"To initiate the moving of the seat, publish an MQTT message for the seat adjuster application to set the position to ",(0,i.kt)("inlineCode",{parentName:"p"},"1000")," (which is the equivalent of 100%):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'mosquitto_pub -t seatadjuster/setPosition/request -m \'{"position": 1000, "requestId": "12345"}\'\n')),(0,i.kt)("p",null,"You may need to open a second terminal session to send the message.\nIn the QEMU setup, you can do this through an SSH connection from the host machine by running ",(0,i.kt)("inlineCode",{parentName:"p"},"ssh -p 2222 root@localhost"),"."),(0,i.kt)("p",null,"After publishing the setPosition-message, the expected output for the ",(0,i.kt)("inlineCode",{parentName:"p"},"seatadjuster/#")," subscription should look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'seatadjuster/setPosition/request {"position": 1000, "requestId": "12345"}\nseatadjuster/setPosition/response {"requestId": "12345", "result": {"status": 0, "message": "Set Seat position to: 1000"}}\nseatadjuster/currentPosition {"position": 00}\nseatadjuster/currentPosition {"position": 10}\nseatadjuster/currentPosition {"position": 20}\nseatadjuster/currentPosition {"position": 30}\nseatadjuster/currentPosition {"position": 40}\nseatadjuster/currentPosition {"position": 50}\n...\n')),(0,i.kt)("p",null,"If you encounter an issue or want to look deeper into the state of the container, you can check the logs by executing:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kanto-cm --name <container-name> logs\n")),(0,i.kt)("h2",{id:"run-kuksa-client"},"Run Kuksa Client"),(0,i.kt)("p",null,"Besides trusting the log information and the MQTT messages that the seat position in the KUKSA Databroker has changed you can read the values\ndirectly from the KUKSA Databroker with the KUKSA Client.\nThrough the ",(0,i.kt)("inlineCode",{parentName:"p"},"sdv-ctr-exec")," it becomes possible to interact with the CLI of the Eclipse KUKSA Client (the following command will only work with kuksa-client tags up to 0.3.0):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kanto-cm create --i --t --network=host --name=kuksa-client ghcr.io/eclipse/kuksa.val/kuksa-client:0.3.0\nkanto-cm start --name=kuksa-client\nsdv-ctr-exec -n kuksa-client /kuksa-client/bin/kuksa-client --port 30555 --protocol grpc --insecure\n")),(0,i.kt)("p",null,"Congratulations, you have reached the end of the seat adjuster guide. Based on the used code, you can now continue to realize other applications by using other signals.\nYou may need to adapt your ",(0,i.kt)("inlineCode",{parentName:"p"},"mock.py")," accordingly."),(0,i.kt)("h2",{id:"deployment-for-vehicle"},"Deployment for Vehicle"),(0,i.kt)("p",null,"To realize the described setup in a vehicle, you need to use a provider that is specific to the model and the covered VSS signals. As the picture below shows, this provider subscribes to changes in the relevant VSS signals in the Kuksa databroker. Upon changes, the provider interacts with the Seat ECU through the vehicle bus system, like a CAN bus. The ECU then controls the hardware, like the motor to adjust a seat."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Leda Seat Adjuster Use Case",src:a(3155).Z,width:"681",height:"381"})),(0,i.kt)("p",null,"A benefit of this setup is the split between vehicle-specific implementation and the general application.\nSplitting these aspects makes it easier to port the application to other vehicles and save on duplicate realizations of the application logic."),(0,i.kt)("p",null,"At the same time, multiple applications interacting with the same VSS signal benefit from the re-use of the provider functionality instead of re-implementing the vehicle access again."),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/Cabin/SingleSeat.vspec"},"https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/Cabin/SingleSeat.vspec")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/eclipse/kuksa.val.services/tree/main/seat_service"},"https://github.com/eclipse/kuksa.val.services/tree/main/seat_service")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://eclipse.dev/velocitas/docs/about/use_cases/seat_adjuster/"},"https://eclipse.dev/velocitas/docs/about/use_cases/seat_adjuster/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/eclipse-velocitas/vehicle-app-python-sdk/tree/main/examples/seat-adjuster"},"https://github.com/eclipse-velocitas/vehicle-app-python-sdk/tree/main/examples/seat-adjuster")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/eclipse-leda/meta-leda/blob/main/meta-leda-components/recipes-sdv/eclipse-leda/kanto-containers/example/seatadjuster-app.json.disabled"},"https://github.com/eclipse-leda/meta-leda/blob/main/meta-leda-components/recipes-sdv/eclipse-leda/kanto-containers/example/seatadjuster-app.json.disabled")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/eclipse-leda/meta-leda/blob/main/meta-leda-components/recipes-sdv/eclipse-leda/kanto-containers/example/seatservice.json"},"https://github.com/eclipse-leda/meta-leda/blob/main/meta-leda-components/recipes-sdv/eclipse-leda/kanto-containers/example/seatservice.json"))))}h.isMDXComponent=!0},3155:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/seatadjuster-can-befc0cba59862423eca5ad80d634646c.png"}}]);