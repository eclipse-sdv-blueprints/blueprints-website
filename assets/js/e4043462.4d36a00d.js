"use strict";(self.webpackChunkblueprints_website=self.webpackChunkblueprints_website||[]).push([[500],{5788:(e,t,r)=>{r.d(t,{Iu:()=>s,yg:()=>f});var n=r(1504);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6924:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(5072),o=(r(1504),r(5788));const a={},i="Actuator Provider",l={unversionedId:"service-to-signal/components/actuator-provider/README",id:"service-to-signal/components/actuator-provider/README",title:"Actuator Provider",description:"Prerequisites",source:"@site/docs/service-to-signal/components/actuator-provider/README.md",sourceDirName:"service-to-signal/components/actuator-provider",slug:"/service-to-signal/components/actuator-provider/",permalink:"/docs/service-to-signal/components/actuator-provider/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"overallSidebar",previous:{title:"Horn Client",permalink:"/docs/service-to-signal/components/horn-client/"}},c={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Hardware Required",id:"hardware-required",level:3}],s={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.yg)(u,(0,n.c)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"actuator-provider"},"Actuator Provider"),(0,o.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.yg)("h3",{id:"hardware-required"},"Hardware Required"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"A development board based on the ESP32 SoC.",(0,o.yg)("blockquote",{parentName:"li"},(0,o.yg)("p",{parentName:"blockquote"},"Note, that this project was tested with the ESP-32-WROOM-32UE. According to the\n",(0,o.yg)("a",{parentName:"p",href:"https://github.com/eclipse-zenoh/zenoh-pico?tab=readme-ov-file#223-esp-idf"},"Zenoh-pico project"),",\nthe implementation was also tested with the az-delivery-devkit-v4 ESP32 board. Make sure that the chip has at\nleast 2MB flash size."))),(0,o.yg)("li",{parentName:"ul"},"USB cable for power supply and programming.")),(0,o.yg)("p",null,"We use PlatformIO to install the necessary toolchain for building the actuator provider for the microcontroller."),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Install PlatformIO Core (CLI) for your system:\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.platformio.org/en/latest/core/installation/methods/index.html"},"PlatformIO installation instructions"))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Configure the provider application with the header file ",(0,o.yg)("inlineCode",{parentName:"p"},"src/config.h"),".\nHere, we need to configure the IP address of the Zenoh router to connect to.\nTo adjust the Wi-Fi configuration execute the following command:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"platformio run -t menuconfig\n")),(0,o.yg)("p",{parentName:"li"},"   This will build the menuconfig where you can set the SSID and password for\nthe Wi-Fi connection under ",(0,o.yg)("inlineCode",{parentName:"p"},"Application Configuration > WiFi SSID"))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Build, flash, and monitor the application using:"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"platformio run\nplatformio run -t upload\nplatformio run -t monitor\n")))))}d.isMDXComponent=!0}}]);